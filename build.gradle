plugins {
    id 'groovy'
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id('io.github.gradle-nexus.publish-plugin') version '1.1.0'
}

group 'se.alipsa.groovy'
version '1.0.3-SNAPSHOT'

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    sourceCompatibility = "11"
    targetCompatibility = "11"
}

dependencies {
    def junitVersion = "[5.8.2, )"
    def openhtmltopdfVersion = "[1.0.10, )"
    def log4jVersion = "[2.18.0, )"
    implementation "org.apache.groovy:groovy-all:[4.0.4, )"
    implementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    implementation "com.vladsch.flexmark:flexmark-all:[0.64.0,)"
    implementation "com.openhtmltopdf:openhtmltopdf-mathml-support:${openhtmltopdfVersion}"
    implementation "com.openhtmltopdf:openhtmltopdf-svg-support:${openhtmltopdfVersion}"
    implementation 'org.webjars:bootstrap:5.1.3'

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testRuntimeOnly "org.apache.logging.log4j:log4j-core:${log4jVersion}"
}

test {
    dependsOn cleanTest
    testLogging.showStandardStreams = true

    useJUnitPlatform()
}

//Maven Central uploads
task javadocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'javadoc'
    from groovydoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

nexusPublishing {
    repositories {
        sonatype()
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact(javadocJar)
            artifact(sourcesJar)
            pom {
                name = 'Groovy Markdown'
                description = 'Processing markdown text with groovy enhancements embedded and creating, markdown, html of pdf'
                url = "https://github.com/perNyfelt/gmd"
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/perNyfelt/gmd/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'perNyfelt'
                        name = 'Per Nyfelt'
                    }
                }
                scm {
                    url = 'https://github.com/perNyfelt/gmd'
                    connection = 'scm:git:https://github.com/perNyfelt/gmd.git'
                    developerConnection = 'scm:git:git@github.com:perNyfelt/gmd.git'
                }
            }
        }
    }
}

signing {
    if ( !signing.signatory ) {
        logger.warn "No signatory defined. Skipping signing..."
    } else {
        sign publishing.publications.maven
    }
}