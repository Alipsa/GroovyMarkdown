import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
  id 'groovy'
  id 'java-gradle-plugin'
  id 'signing'
  id 'maven-publish'
  id "com.github.ben-manes.versions" version "0.52.0"
}

group = 'se.alipsa.gmd'
version = '1.0.0-SNAPSHOT'
description = 'Compiles gmd files into markdown, html or pdf'

gradlePlugin {
  website.set("https://github.com/Alipsa/GroovyMarkdown")
  vcsUrl.set("https://github.com/Alipsa/GroovyMarkdown.git")
  plugins {
    simplePlugin {
      id = "${project.group}.${project.name}"
      implementationClass = 'se.alipsa.gmd.gradle.GmdPlugin'
      displayName = "Gmd Plugin"
      description = project.description
      tags.set(["markdown", "Groovy", "pdf", "html", "gmd"])
    }
  }
}

repositories {
  mavenCentral()
}

dependencies {
  def groovyVersion = '4.0.26'
  def log4jVersion = '2.24.3'
  //implementation "org.apache.groovy:groovy:${groovyVersion}"
  //implementation "org.apache.groovy:groovy-templates:${groovyVersion}"
  //implementation "org.apache.groovy:groovy-jsr223:${groovyVersion}"
  //implementation 'org.apache.ivy:ivy:2.5.3' // needed for @Grab)
  implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
  implementation project(':gmd-core')
  testImplementation platform('org.junit:junit-bom:5.12.1')
  testImplementation 'org.junit.jupiter:junit-jupiter'
  testImplementation 'org.junit.platform:junit-platform-launcher'
}

sourceSets {
  test {
    java {
      srcDirs = ['src/test/gmd']
    }
  }
}

test {
  useJUnitPlatform()
  testLogging {
    // set options for log level LIFECYCLE
    events TestLogEvent.FAILED,
        TestLogEvent.PASSED,
        TestLogEvent.SKIPPED,
        TestLogEvent.STANDARD_OUT
    exceptionFormat = TestExceptionFormat.FULL
    showExceptions = true
    showCauses = true
    showStackTraces = true
    showStandardStreams = true
  }
}